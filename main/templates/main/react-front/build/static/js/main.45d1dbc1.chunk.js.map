{"version":3,"sources":["logo.svg","services/PicService.js","components/pics/pics.jsx","services/AnalyticsService.js","components/socials/socials.jsx","components/intro/intro.jsx","components/about/about.jsx","services/AddPics.js","pages/AdminPics/AdminPics.jsx","pages/Predictions/Predictions.jsx","services/UsersService.js","App.js","reportWebVitals.js","index.js"],"names":["getPicSet","fetch","method","then","res","json","picsData","Pics","useState","pics","setPics","analyticsIntToggle","setAnalyticsIntToggle","useEffect","PicService","console","log","dat","analyticsInterval","setInterval","clearInterval","className","onScroll","e","picsInScroll","target","childNodes","windowWidth","Math","max","document","documentElement","clientWidth","window","innerWidth","pic","fromLeft","getBoundingClientRect","left","picWidth","width","map","picData","src","id","alt","Socials","Intro","About","BASE_URL","AdminPics","addPics","setAddPics","addPicsNames","setAddPicsNames","addPicsUrls","setAddPicsUrls","picsForm","setPicsForm","descriptions","tagslists","picsDBInfo","setPicsDBInfo","oldPics","setOldPics","a","arrayAddPics","name","picsDBInfoClone","descriptionsPicNames","Object","keys","length","picName","indexOf","FormData","i","append","getAll","picUrls","URL","createObjectURL","handleSubmit","picsDBInfoCorr","forEach","split","jsonDB","JSON","stringify","blob","Blob","type","axios","post","data","handleRemovePic","idx","dataset","addPicsCopy","splice","newFileList","DataTransfer","items","add","files","handleDescriptionChange","value","handleTagsChange","handleRemovePicClick","AddPicsService","onChange","newDataTransfer","file","multiple","onClick","picUrl","data-idx","Predictions","appUsers","setAppUsers","allUsers","userArr","slice","userInfo","App","exact","to","href","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45d1dbc1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const BASE_URL = '/main/api'\n\nexport function getPicSet() {\n    return fetch(`${BASE_URL}/get-pics`, {method: 'GET'})\n    .then(res => res.json())\n    .then(({ picsData }) => picsData)\n}\n","import React, { useEffect, useState } from 'react';\nimport ImageGallery from 'react-image-gallery';\nimport * as PicService from '../../services/PicService';\nimport * as AnalyticsService from '../../services/AnalyticsService'\nimport './pics.css';\nimport \"react-image-gallery/styles/css/image-gallery.css\"\nimport $ from 'jquery';\n\nexport default function Pics() {\n    const [pics, setPics] = useState([])\n    const [analyticsIntToggle, setAnalyticsIntToggle] = useState(false)\n    \n    useEffect(() => {\n        PicService.getPicSet()\n        .then(res => {console.log(res); return res})\n        .then(pics => setPics(pics))\n    }, [])\n\n    useEffect(() => {\n        AnalyticsService.promptAnalysis()\n        let analyticsInterval = setInterval(() => {\n            setAnalyticsIntToggle(!analyticsIntToggle)\n        }, 3000)\n        return () => {\n            clearInterval(analyticsInterval)\n        }\n    }, [analyticsIntToggle])\n    \n    const setPicClass = (e) => {\n        let picsInScroll = e.target.childNodes\n        let windowWidth = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n        for (let pic of picsInScroll) {\n            let fromLeft = pic.getBoundingClientRect().left\n            let picWidth = pic.getBoundingClientRect().width\n            if (fromLeft > 0 && fromLeft + picWidth < windowWidth + 50) { pic.className = \"scroll-pic active\" }\n            else if (fromLeft < -100 | fromLeft + picWidth > windowWidth + 200) { pic.className = \"scroll-pic inactive\" }\n        }\n    }\n    return (\n        <>\n        <div className=\"wrapper\">\n            <div className=\"scrolls\" onScroll={setPicClass}>\n                {pics[0] ? \n                <>\n                { pics.map((picData) => (<img src={picData[1]} id={picData[0]} className=\"scroll-pic inactive\" alt=\"pic\" />)) }\n                </>\n                :\n                <h3>Loading...</h3>\n                }\n            </div>\n        </div>\n        {/* <ImageGallery \n        ref={i => this._imageGallery = i}\n        slideInterval=\"2500\"\n        showBullets=\"true\" \n        additionalClass=\"gallery-wrap\"\n        onMouseOver={() => this._imageGallery.pause()} \n        onMouseLeave={() => this._imageGallery.play()}\n        items={pics.length > 0 ? pics.map((picData) => { let imgObj = {\n            original: picData[1], \n            thumbnail: picData[1], \n            originalClass: 'gallery-pic', \n            thumbnailClass: 'thumb-pic', \n            bulletClass: 'bullet' }; \n            return imgObj }):[]} \n            /> */}\n        </>\n    );\n}","const BASE_URL = '/main/api'\n\nexport function promptAnalysis() {\n    return fetch(`${BASE_URL}/get-analysis`, {method: 'GET'})\n    .then(res => res.json())\n    .then(dat => console.log(dat))\n}","import React, { useState, useEffect } from 'react';\nimport './socials.css'\n\nexport default function Socials() {\n    return (\n        <h3 id=\"socialsTag\">socials component</h3>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport './intro.css'\n\nexport default function Intro(){\n    return (\n        <h3 id=\"introTag\">intro component</h3>\n    );\n}","import React, { useState, useEffect } from 'react'\nimport './about.css';\n\nexport default function About(){\n    return (\n        <>\n        <h3 id=\"aboutTag\">about component</h3>\n        </>\n    );\n}","import $ from 'jquery';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\n\nconst BASE_URL = '/main/api'\n\nexport function addPicsDBandFB(picsData) {\n    return axios.post(`${BASE_URL}/add-pics/`, picsData)\n    .then(res => console.log(res.data))\n}\n\nexport function removePicDBandFB(picName) {\n    return axios.post(`${BASE_URL}/remove-pic/`, {'picName': picName})\n    .then(res => res.data)\n}","import React, { useState, useEffect } from 'react';\nimport * as AddPicsService from '../../services/AddPics';\nimport * as PicService from '../../services/PicService'\nimport './AdminPics.css';\nimport $ from 'jquery';\n\nexport default function AdminPics() {\n    const [addPics, setAddPics] = useState([])\n    const [addPicsNames, setAddPicsNames] = useState([])\n    const [addPicsUrls, setAddPicsUrls] = useState([])\n    const [picsForm, setPicsForm] = useState()\n    const [picsDBInfo, setPicsDBInfo] = useState({ descriptions: {}, tagslists: {} })\n    const [oldPics, setOldPics] = useState([])\n\n    useEffect(() => {\n        PicService.getPicSet()\n        .then(pics => setOldPics(pics))\n    }, [])\n\n    useEffect(async() => {\n        let arrayAddPics = [...addPics]\n        let addPicsNames = arrayAddPics.map(pic => pic.name)\n        let picsDBInfoClone = { ...picsDBInfo }\n        let descriptionsPicNames = Object.keys(picsDBInfoClone.descriptions)\n        if (descriptionsPicNames.length > 0) {\n            for (let picName of descriptionsPicNames) {\n                if (addPicsNames.indexOf(picName) < 0) {\n                    delete picsDBInfoClone.descriptions[picName]\n                    delete picsDBInfoClone.tagslists[picName]\n                }\n            }\n        }\n        setPicsDBInfo(picsDBInfoClone)\n        setAddPicsNames(addPicsNames)\n        let picsData = new FormData()\n        for (var i = 0; i < addPics.length; i++) picsData.append('file', addPics[i])\n        setPicsForm(picsData)\n        let pics = await picsData.getAll('file')\n        let picUrls = pics.map(pic => URL.createObjectURL(pic))\n        setAddPicsUrls(picUrls)\n    }, [addPics])\n\n    const handlePicsInputChange = (e) => {\n        const newDataTransfer = new DataTransfer();\n        for (let file of e.target.files) newDataTransfer.items.add(file);\n        setAddPics(newDataTransfer.files)\n    }\n\n    const handleSubmit = async (e) => {\n        let picsDBInfoCorr = {...picsDBInfo}\n        let { tagslists } = picsDBInfoCorr\n        addPicsNames.forEach(picName => {\n            if (tagslists[picName]) tagslists[picName] = tagslists[picName].split(\", \")\n        })\n        let jsonDB = JSON.stringify(picsDBInfoCorr)\n        let blob = new Blob([jsonDB], { type: 'application/json' })\n        picsForm.append('dbInfo', blob)\n        AddPicsService.addPicsDBandFB(picsForm)\n    }\n\n    const handleRemovePic = (e) => {\n        let idx = e.target.dataset.idx;\n        let addPicsCopy = [...addPics]\n        addPicsCopy.splice(idx, 1)\n        let newFileList = new DataTransfer()\n        for (let pic of addPicsCopy) newFileList.items.add(pic)\n        setAddPics(newFileList.files)\n    }\n    const handleDescriptionChange = (e) => {\n        let { descriptions } = { ...picsDBInfo }\n        descriptions[addPicsNames[e.target.dataset.idx]] = e.target.value\n        setPicsDBInfo({ ...picsDBInfo, descriptions })\n    }\n    const handleTagsChange = (e) => {\n        let { tagslists } = { ...picsDBInfo }\n        tagslists[addPicsNames[e.target.dataset.idx]] = e.target.value\n        setPicsDBInfo({ ...picsDBInfo, tagslists })\n    }\n\n    const handleRemovePicClick = (e) => {\n        let picName = e.target.id\n        AddPicsService.removePicDBandFB(picName)\n        .then(res => console.log(res))\n    }\n\n    return (\n        <>\n        <h3>hi</h3>\n        <input id=\"picsInp\" type=\"file\" name=\"picsInput\" files={addPics} onChange={handlePicsInputChange} multiple />\n        <button onClick={handleSubmit} type=\"submit\">ADD</button>\n        {addPicsUrls.map((picUrl, idx) => (\n            <>\n            <button data-idx={idx} onClick={handleRemovePic}>Remove</button>\n            <img src={picUrl} alt=\"\" />\n            <label>Description</label>\n            <input data-idx={idx} type=\"text\" name=\"description\" value={picsDBInfo.descriptions[addPicsNames[idx]]} onChange={handleDescriptionChange} />\n            <label>Tag</label>\n            <input data-idx={idx} type=\"text\" name=\"tags\" value={picsDBInfo.tagslists[addPicsNames[idx]]} onChange={handleTagsChange} />\n            <button>+</button>\n            </>\n        ))}\n        {oldPics.map(picData => (\n            <>\n            <img src={picData[1]} id={picData[0]} alt=\"old-pic\" />\n            <button id={picData[0]} className=\"remove-pic-btn\" onClick={handleRemovePicClick}>X</button>\n            </>\n        ))}\n        </>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport * as UsersService from '../../services/UsersService'\n\nexport default function Predictions() {\n    const [appUsers, setAppUsers] = useState([])\n    useEffect(() => {\n        UsersService.getListUsers()\n        .then(allUsers => setAppUsers(allUsers))\n    }, [])\n    return (\n        <>\n        <h3>the predictions page</h3>\n        <h3></h3>\n        <h3>list users and pick to get pics sorted by their interest</h3>\n        <h3>All Users IDs</h3>\n        {appUsers.map(userInfo => (<h3>{userInfo}</h3>))}\n        </>\n    )\n}","const BASE_URL = '/main/api'\n\nexport function getListUsers() {\n    console.log('in here')\n    return fetch(`${BASE_URL}/get-users`, {method: 'GET'})\n    .then(res => res.json())\n    .then(({ allUsers }) => {\n    console.log(allUsers)\n    let allUsersMap = allUsers.map(userArr => {\n            if (userArr[1]) return [userArr[0], userArr[1].slice(1,-1)]\n            else return userArr\n    })\n    return allUsersMap\n    })\n}","import { Route, Link, NavLink } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport Pics from './components/pics/pics';\nimport Socials from './components/socials/socials'\nimport Intro from './components/intro/intro';\nimport About from './components/about/about';\nimport AdminPics from './pages/AdminPics/AdminPics';\nimport Predictions from './pages/Predictions/Predictions';\n\n\n\nfunction App() {\n  return (\n    <>\n      <NavLink className=\"nav-items\" exact to=\"/main\">Home</NavLink>\n      <NavLink className=\"nav-items\" exact to=\"/main/edit-pics\">Edit Pics</NavLink>\n      <NavLink className=\"nav-items\" exact to=\"/main/predictions\">Predictions</NavLink>\n      <a className=\"nav-items\" href=\"http://localhost:8000/main/admin-add-pics\">Admin Add Pics</a>\n      <Route exact path='/main'\n        render={() =>\n          <div id=\"appDiv\">\n            <h3>Hi</h3>\n            <Intro />\n            <Pics />\n            <Socials />\n            <About />\n          </div>\n         } />\n      <Route exact path='/main/edit-pics'\n        render={() => \n          <AdminPics />\n        } \n      />\n      <Route exact path='/main/predictions'\n        render={() => \n          <Predictions />\n        } \n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}