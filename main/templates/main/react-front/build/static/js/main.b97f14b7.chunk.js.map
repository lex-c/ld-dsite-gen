{"version":3,"sources":["logo.svg","components/pics/pics.jsx","services/PicService.js","components/socials/socials.jsx","components/intro/intro.jsx","components/about/about.jsx","pages/AdminPics/AdminPics.jsx","services/AddPics.js","App.js","reportWebVitals.js","index.js"],"names":["Pics","useState","pics","setPics","picsIntToggle","setPicsIntToggle","useEffect","console","log","fetch","method","then","res","json","picData","picsData","picsInterval","setInterval","clearInterval","class","onScroll","e","picsInScroll","target","childNodes","windowWidth","Math","max","document","documentElement","clientWidth","window","innerWidth","pic","fromLeft","getBoundingClientRect","left","picWidth","width","className","map","src","id","alt","Socials","Intro","About","AdminPics","addPics","setAddPics","addPicsNames","setAddPicsNames","addPicsUrls","setAddPicsUrls","picsForm","setPicsForm","descriptions","tagslists","picsDBInfo","setPicsDBInfo","a","arrayAddPics","name","picsDBInfoClone","descriptionsPicNames","Object","keys","length","picName","indexOf","FormData","i","append","getAll","picUrls","URL","createObjectURL","handleSubmit","picsDBInfoCorr","forEach","split","jsonDB","JSON","stringify","blob","Blob","type","axios","post","data","handleRemovePic","idx","dataset","addPicsCopy","splice","newFileList","DataTransfer","items","add","files","handleDescriptionChange","value","handleTagsChange","onChange","newDataTransfer","file","multiple","onClick","picUrl","data-idx","App","exact","to","href","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b97f14b7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react';\nimport ImageGallery from 'react-image-gallery';\nimport * as PicService from '../../services/PicService';\nimport './pics.css';\nimport \"react-image-gallery/styles/css/image-gallery.css\"\nimport $ from 'jquery';\n\nexport default function Pics() {\n    const [pics, setPics] = useState([])\n    const [picsIntToggle, setPicsIntToggle] = useState(false)\n    useEffect(() => {\n        PicService.getPicSet()\n        .then(({ picsData }) => setPics(picsData))\n        let picsInterval = setInterval(() => {\n            setPicsIntToggle(!picsIntToggle)\n        }, 30000)\n        return () => {\n            clearInterval(picsInterval)\n        }\n    }, [picsIntToggle])    \n    \n    const setPicClass = (e) => {\n        let picsInScroll = e.target.childNodes\n        let windowWidth = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n        for (let pic of picsInScroll) {\n            let fromLeft = pic.getBoundingClientRect().left\n            let picWidth = pic.getBoundingClientRect().width\n            if (fromLeft > 0 && fromLeft + picWidth < windowWidth + 50) { pic.className = \"scroll-pic active\" }\n            else if (fromLeft < -100 | fromLeft + picWidth > windowWidth + 200) { pic.className = \"scroll-pic inactive\" }\n        }\n    }\n    return (\n        <>\n        <div class=\"wrapper\">\n            <div class=\"scrolls\" onScroll={setPicClass}>\n                { pics.map((picData) => (<img src={picData[1]} id={picData[0]} className=\"scroll-pic inactive\" alt=\"pic\" />)) }\n            </div>\n        </div>\n        {/* <ImageGallery \n        ref={i => this._imageGallery = i}\n        slideInterval=\"2500\"\n        showBullets=\"true\" \n        additionalClass=\"gallery-wrap\"\n        onMouseOver={() => this._imageGallery.pause()} \n        onMouseLeave={() => this._imageGallery.play()}\n        items={pics.length > 0 ? pics.map((picData) => { let imgObj = {\n            original: picData[1], \n            thumbnail: picData[1], \n            originalClass: 'gallery-pic', \n            thumbnailClass: 'thumb-pic', \n            bulletClass: 'bullet' }; \n            return imgObj }):[]} \n            /> */}\n        </>\n    );\n}","const BASE_URL = '/main/api'\n\nexport function getPicSet() {\n    console.log('in the serice get')\n    return fetch(`${BASE_URL}/get-pics`, {\n        method: 'GET'\n    })\n    .then(res => res.json())\n    .then(picData => {\n        console.log('picData:     ', picData)\n        return picData\n    })\n}","import React, { useState, useEffect } from 'react';\nimport './socials.css'\n\nexport default function Socials() {\n    return (\n        <h3 id=\"socialsTag\">socials component</h3>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport './intro.css'\n\nexport default function Intro(){\n    return (\n        <h3 id=\"introTag\">intro component</h3>\n    );\n}","import React, { useState, useEffect } from 'react'\nimport './about.css';\n\nexport default function About(){\n    return (\n        <>\n        <h3 id=\"aboutTag\">about component</h3>\n        </>\n    );\n}","import React, { useState, useEffect } from 'react'\nimport * as AddPicsService from '../../services/AddPics'\nimport './AdminPics.css'\nimport $ from 'jquery';\n\nexport default function AdminPics() {\n    const [addPics, setAddPics] = useState([])\n    const [addPicsNames, setAddPicsNames] = useState([])\n    const [addPicsUrls, setAddPicsUrls] = useState([])\n    const [picsForm, setPicsForm] = useState()\n    const [picsDBInfo, setPicsDBInfo] = useState({ descriptions: {}, tagslists: {} })\n    \n    useEffect(async() => {\n        let arrayAddPics = [...addPics]\n        let addPicsNames = arrayAddPics.map(pic => pic.name)\n        let picsDBInfoClone = { ...picsDBInfo }\n        let descriptionsPicNames = Object.keys(picsDBInfoClone.descriptions)\n        if (descriptionsPicNames.length > 0) {\n            for (let picName of descriptionsPicNames) {\n                if (addPicsNames.indexOf(picName) < 0) {\n                    delete picsDBInfoClone.descriptions[picName]\n                    delete picsDBInfoClone.tagslists[picName]\n                }\n            }\n        }\n        setPicsDBInfo(picsDBInfoClone)\n        setAddPicsNames(addPicsNames)\n        let picsData = new FormData()\n        for (var i = 0; i < addPics.length; i++) picsData.append('file', addPics[i])\n        setPicsForm(picsData)\n        let pics = await picsData.getAll('file')\n        let picUrls = pics.map(pic => URL.createObjectURL(pic))\n        setAddPicsUrls(picUrls)\n    }, [addPics])\n\n    const handlePicsInputChange = (e) => {\n        const newDataTransfer = new DataTransfer(); \n        for (let file of e.target.files) newDataTransfer.items.add(file); \n        setAddPics(newDataTransfer.files)\n    }\n\n    const handleSubmit = async (e) => {\n        let picsDBInfoCorr = {...picsDBInfo}\n        let { tagslists } = picsDBInfoCorr\n        addPicsNames.forEach(picName => {\n            if (tagslists[picName]) tagslists[picName] = tagslists[picName].split(\", \")\n        })\n        let jsonDB = JSON.stringify(picsDBInfoCorr)\n        let blob = new Blob([jsonDB], { type: 'application/json' })\n        picsForm.append('dbInfo', blob)\n        AddPicsService.addPicsDBandFB(picsForm)\n    }\n\n    const handleRemovePic = (e) => {\n        let idx = e.target.dataset.idx;\n        let addPicsCopy = [...addPics]\n        addPicsCopy.splice(idx, 1)\n        let newFileList = new DataTransfer()\n        for (let pic of addPicsCopy) newFileList.items.add(pic)\n        setAddPics(newFileList.files)\n    }\n    const handleDescriptionChange = (e) => {\n        let { descriptions } = { ...picsDBInfo }\n        descriptions[addPicsNames[e.target.dataset.idx]] = e.target.value\n        setPicsDBInfo({ ...picsDBInfo, descriptions })\n    }\n    const handleTagsChange = (e) => {\n        let { tagslists } = { ...picsDBInfo }\n        tagslists[addPicsNames[e.target.dataset.idx]] = e.target.value\n        setPicsDBInfo({ ...picsDBInfo, tagslists })\n    }\n\n    return (\n        <>\n        <h3>hi</h3>\n        <input id=\"picsInp\" type=\"file\" name=\"picsInput\" files={addPics} onChange={handlePicsInputChange} multiple />\n        <button onClick={handleSubmit} type=\"submit\">ADD</button>\n        {addPicsUrls.map((picUrl, idx) => (\n            <>\n            <button data-idx={idx} onClick={handleRemovePic}>Remove</button>\n            <img src={picUrl} alt=\"\" />\n            <label>Description</label>\n            <input data-idx={idx} type=\"text\" name=\"description\" value={picsDBInfo.descriptions[addPicsNames[idx]]} onChange={handleDescriptionChange} />\n            <label>Tag</label>\n            <input data-idx={idx} type=\"text\" name=\"tags\" value={picsDBInfo.tagslists[addPicsNames[idx]]} onChange={handleTagsChange} />\n            <button>+</button>\n            </>\n        ))}\n        </>\n    );\n}","import $ from 'jquery';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\n\nconst BASE_URL = '/main/api'\n\nexport function addPicsDBandFB(picsData) {\n    axios.post(`${BASE_URL}/add-pics/`, picsData)\n    .then(res => console.log(res.data))\n}\n\n// function getCookie(name) {\n//     var cookieValue = null;\n//     if (document.cookie && document.cookie !== '') {\n//         var cookies = document.cookie.split(';');\n//         for (var i = 0; i < cookies.length; i++) {\n//             var cookie = $.trim(cookies[i]);\n//             if (cookie.substring(0, name.length + 1) === (name + '=')) {\n//                 cookieValue = decodeURIComponent(cookie.substring(name.length + 1))\n//                 break\n//             }\n//         }\n//     }\n//     return cookieValue;\n// }","import { Route, Link, NavLink } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport Pics from './components/pics/pics';\nimport Socials from './components/socials/socials'\nimport Intro from './components/intro/intro';\nimport About from './components/about/about';\nimport AdminPics from './pages/AdminPics/AdminPics';\n\n\n\nfunction App() {\n  return (\n    <>\n      <NavLink exact to='/editpics'>Edit Pics</NavLink>\n      <a href=\"/main/admin-add-pics\">Admin Add Pics</a>\n      <Route exact path='/main'\n        render={() =>\n          <div id=\"appDiv\">\n            <h3>Hi</h3>\n            <Intro />\n            <Pics />\n            <Socials />\n            <About />\n          </div>\n         } />\n      <Route exact path='/editpics'\n        render={() => \n          <AdminPics />\n        } \n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}